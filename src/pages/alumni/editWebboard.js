import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import axios from 'axios';
import { IoIosAdd } from "react-icons/io";
import Swal from "sweetalert2";

function EditWebboard() {
    const { webboardId } = useParams();
    const navigate = useNavigate();
    const [category, setCategory] = useState([]);
    // const [formData, setFormData] = useState(null);
    
    const [formData, setFormData] = useState({
        title: '',
        content: '',
        image_path:'',
        category_id: ''
    });

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    useEffect(() => {
        axios.get(`http://localhost:3001/users/webboard/${webboardId}`)
            .then((response) => {
                // console.log("üîπ Data from API:", response.data); 
                if (response.data.success) {
                    setFormData(response.data.data);
                }else {
                    alert("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏£‡∏∞‡∏ó‡∏π‡πâ");
                    navigate("/alumni-profile-webboard"); // ‡∏ñ‡πâ‡∏≤‡∏´‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏£‡∏∞‡∏ó‡∏π‡πâ
                }
            })
            .catch((error) => {
                console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏£‡∏∞‡∏ó‡∏π‡πâ:', error);
            });
    }, [webboardId, navigate]);

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤ input
    const handleChange = (e) => {
        const { name, value } = e.target;
        setFormData((prevData) => ({ ...prevData, [name]: value }));
    };

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
    const handleFileChange = (e) => {
        setFormData((prevData) => ({ ...prevData, image_path: e.target.files[0] }));
    };
    
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    const handleSubmit = (e) => {
        e.preventDefault();

        const formDataToSend = new FormData();
        formDataToSend.append("title", formData.title);
        formDataToSend.append("content", formData.content);
        formDataToSend.append("category_id", formData.category_id);
        if (formData.image_path instanceof File) {
        formDataToSend.append("image_path", formData.image_path);
        }

        axios.put(`http://localhost:3001/users/edit-webboard/${webboardId}`, formDataToSend, {
            headers: { "Content-Type": "multipart/form-data" },
        })
        .then((response) => {
            if (response.data.success) {
              Swal.fire({
                title: "‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
                text: "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏£‡∏∞‡∏ó‡∏π‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
                icon: "success",
                confirmButtonColor: "#0F75BC",
                confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á",
              }).then(() => {
                navigate("/alumni-profile-webboard"); // ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Å‡∏£‡∏∞‡∏ó‡∏π‡πâ
              });
            }
          })
          .catch((error) => {
            Swal.fire({
              title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!",
              text: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏£‡∏∞‡∏ó‡∏π‡πâ‡πÑ‡∏î‡πâ",
              icon: "error",
              confirmButtonColor: "#d33",
              confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á",
            });
            console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:", error);
          });
    };

     // ‡∏î‡∏∂‡∏ácategory
          useEffect(() => {
            axios.get(`http://localhost:3001/category/category-all`)
            .then(response => {
                if (response.data.success) {
                    setCategory(response.data.data); 
                } else {
                    console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:', response.data.message);
                }
            })
            .catch(error => {
                console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:', error.message);
            });
          }, []);
                       
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏£‡∏ö‡∏Å‡πà‡∏≠‡∏ô render form
        if (!formData.title) {
            return <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>;
        }

    return (
        <div className="container mt-5">
            <h2 className='alumni-title text-center'>‡∏Å‡∏£‡∏∞‡∏ó‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á</h2>
            <div className="col-7 bg-light rounded">
                <form onSubmit={handleSubmit}>
                    <div className="mb-3">
                        <label className="form-label">‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Å‡∏£‡∏∞‡∏ó‡∏π‡πâ</label>
                        <input
                            type="text"
                            className="form-control"
                            name="title"
                            value={formData.title}
                            onChange={handleChange}
                            required
                        />
                    </div>
                    <div className="mb-3">
                        <label className="form-label">‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Å‡∏£‡∏∞‡∏ó‡∏π‡πâ</label>
                        <textarea
                            className="form-control"
                            name="content"
                            rows="5"
                            value={formData.content}
                            onChange={handleChange}
                            required
                        ></textarea>
                    </div>
                    <div className="mb-3">
                        <label className="form-label">‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</label>
                        <input type="file" className="form-control" onChange={handleFileChange} />
                        {formData.image_path && (
                            <div className="mt-2">
                            <img src={`http://localhost:3001/${formData.image_path.replace(/^\/+/, '')}` } alt="Webboard" width="200" />
                            </div>
                        )}
                    </div>
                    <div className="mb-3">
                        <label>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà <span className="important">*</span></label>
                        <div className="d-flex align-items-center">
                            <select className="form-control" name="category_id" value={formData.category_id} onChange={handleChange}>
                            <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</option>
                                        {Array.isArray(category) && category.length > 0 ? (
                                        category.map(category => (
                                    <option key={category.category_id} value={category.category_id} >
                                        {category.category_name}
                                    </option>
                                    ))                                  
                                ) : (
                                <option value="" disabled>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</option>
                                )}
                                {/* <option value="add_new"><IoIosAdd/> ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà...</option> */}
                            </select>
                        </div>
                    </div>
                    <button type="submit" className="btn btn-primary" onClick={() => navigate('/alumni-profile-webboard')}>‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
                    <button type="button" className="btn btn-secondary ms-2" onClick={() => navigate('/alumni-profile-webboard')}>
                        ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                    </button>
                </form> 
            </div>
            
        </div>
    );
}

export default EditWebboard;
